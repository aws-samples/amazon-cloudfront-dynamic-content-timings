
       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By bridgecrew.io | version: 2.3.3 

terraform_plan scan results:

Passed checks: 27, Failed checks: 23, Skipped checks: 0

Check: CKV_AWS_216: "Ensure Cloudfront distribution is enabled"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-cloudfront-distribution-is-enabled
Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_32
Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/public_12
Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1
Check: CKV_AWS_261: "Ensure HTTP HTTPS Target group defines Healthcheck"
	PASSED for resource: aws_lb_target_group.tg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-kendra-index-server-side-encryption-uses-customer-managed-keys-cmks
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_31
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group_rule.ingress_ALB
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group_rule.ingress_ALB
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group_rule.ingress_ALB
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_31
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group_rule.ingress_ALB
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group_rule.ingress_ALB
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group_rule.ingress_cloudfront
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group_rule.ingress_cloudfront
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group_rule.ingress_cloudfront
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_31
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group_rule.ingress_cloudfront
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group_rule.ingress_cloudfront
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_2
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.front-end-sg
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV2_AWS_42: "Ensure AWS CloudFront distribution uses custom SSL certificate"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-cloudfront-distribution-uses-custom-ssl-certificate
Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route.public_route
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-nat-gateways-are-utilized-for-the-default-route
Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route_table.public_rt
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-nat-gateways-are-utilized-for-the-default-route
Check: CKV2_AWS_32: "Ensure CloudFront distribution has a response headers policy attached"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65
Check: CKV2_AWS_54: "Ensure AWS CloudFront distribution is using secure SSL protocols for HTTPS communication"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
Check: CKV2_AWS_46: "Ensure AWS Cloudfront Distribution with S3 have Origin Access set to enabled"
	PASSED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-cloudfromt-distribution-with-s3-have-origin-access-set-to-enabled
Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	FAILED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/logging_20
Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63
Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27
Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31
Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances
Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized
Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/general_13
Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_lb.lb
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62
Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_lb.lb
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22
Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_lb.lb
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers
Check: CKV_AWS_2: "Ensure ALB protocol is HTTPS"
	FAILED for resource: aws_lb_listener.front_end
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_29
Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	FAILED for resource: aws_subnet.public_subnet[0]
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default
Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	FAILED for resource: aws_subnet.public_subnet[0]
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default
Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	FAILED for resource: aws_subnet.public_subnet[0]
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default
Check: CKV2_AWS_44: "Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic"
	FAILED for resource: aws_route.public_route
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-route-table-with-vpc-peering-does-not-contain-routes-overly-permissive-to-all-traffic
Check: CKV2_AWS_44: "Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic"
	FAILED for resource: aws_route_table.public_rt
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-route-table-with-vpc-peering-does-not-contain-routes-overly-permissive-to-all-traffic
Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.custom_vpc
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/networking_4
Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	FAILED for resource: aws_lb.lb
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones
Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.custom_vpc
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging
Check: CKV2_AWS_47: "Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability"
	FAILED for resource: aws_cloudfront_distribution.distribution
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-aws-cloudfront-attached-wafv2-webacl-is-configured-with-amr-for-log4j-vulnerability
Check: CKV_AWS_103: "Ensure that load balancer is using at least TLS 1.2"
	FAILED for resource: aws_lb_listener.front_end
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_43
Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	FAILED for resource: aws_instance.nginx
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-role-is-attached-to-ec2-instance
Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	FAILED for resource: aws_lb.lb
	File: /tf.json:0-0
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

